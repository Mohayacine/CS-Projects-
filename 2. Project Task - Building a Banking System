
# 2. Project Task - Building a Banking System (5/03)
# -------------------------------------------------
# This is a small terminal-based banking app with login, check balance,
# deposit, withdraw, and exit. Comments explain every step and why.

def banking_system():
    # Set the correct username and password for login
    USER = "user1"  # preset username
    PASS = "pass123"  # preset password (in real apps, never store plaintext passwords)
    balance = 0.0  # start with zero balance

    # Give the user up to 3 tries to enter correct login details
    tries = 3
    while tries > 0:
        # Prompt user for credentials
        u = input("Username: ")  # capture username
        p = input("Password: ")  # capture password
        # Check if both match stored values
        if u == USER and p == PASS:
            print("\nLogin OK! Hello, {}.\n".format(USER))  # welcome message
            break  # exit loop on success
        else:
            tries -= 1  # reduce tries count
            print(f"Wrong! {tries} tries left.")  # show tries left
    else:
        print("No tries left. Bye.")  # inform user of failure
        return  # exit function if login fails

    # After successful login, show the menu until user exits
    while True:
        print("1. Check Balance")
        print("2. Deposit")
        print("3. Withdraw")
        print("4. Exit")
        choice = input("Pick an option: ")  # get user choice

        if choice == '1':  # user wants to check balance
            print(f"Balance: ${balance:.2f}\n")  # display balance
        elif choice == '2':  # deposit money
            amt = float(input("Enter deposit amount: "))  # ask deposit amount
            if amt > 0:
                balance += amt  # add to balance
                print(f"Added ${amt:.2f}. Now ${balance:.2f}\n")  # confirmation
            else:
                print("Must be positive.\n")  # invalid input
        elif choice == '3':  # withdraw money
            amt = float(input("Enter withdrawal amount: "))  # ask withdrawal amount
            if 0 < amt <= balance:
                balance -= amt  # subtract from balance
                print(f"Withdrew ${amt:.2f}. Now ${balance:.2f}\n")  # confirmation
            else:
                print("Bad amount or not enough money.\n")  # invalid or insufficient funds
        elif choice == '4':  # exit option
            print("Goodbye!")
            break  # leave loop
        else:
            print("Choose 1-4 only.\n")  # invalid selection

# Uncomment below to run banking_system() interactively
# banking_system()


